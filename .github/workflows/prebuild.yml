name: Upload prebuilt Z3
on:
  workflow_dispatch:
  push:
    branches: [ upload-prebuilt-static-z3 ]
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg"
      VCPKG_REVISION: 5c82f7e6372c9b0ea25e1fd829dd50235ef37629
      Z3_VERSION: 0.12.2
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.Z3_VERSION }}
          release_name: ${{ env.Z3_VERSION }}
          draft: false
          prerelease: false
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Get latest Github release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          latest: true
          repo: microsoft/vcpkg
          prerelease: false
          draft: false
      - name: checkout-vcpkg
        uses: actions/checkout@v3
        with:
          path: ${{ env.VCPKG_ROOT }}
          repository: microsoft/vcpkg
          ref: ${{ env.VCPKG_REVISION }}
          fetch-depth: 1
      - name: bootstrap-vcpkg
        working-directory: ${{ env.VCPKG_ROOT }}
        run: ./bootstrap-vcpkg.sh
        shell: bash
      - name: vcpkg build z3 with triplet x64-linux
        working-directory: ${{ env.VCPKG_ROOT }}
        run: ./vcpkg install --clean-buildtrees-after-build z3:x64-linux
      - name: prepare artifact for x64-linux
        run: |
          ls "${{ env.VCPKG_ROOT }}/installed/x64-linux/lib"
          ls "${{ env.VCPKG_ROOT }}/installed/x64-linux/include"
          mkdir "${{ github.workspace }}/x64-linux"
          headers=("z3.h" "z3++.h" "z3_algebraic.h" "z3_api.h" "z3_ast_containers.h" "z3_fixedpoint.h" "z3_fpa.h" "z3_macros.h" "z3_optimization.h" "z3_polynomial.h" "z3_rcf.h" "z3_spacer.h" "z3_v1.h" "z3_version.h")
          for header in $headers
          do
            cp "${{ env.VCPKG_ROOT }}/installed/x64-linux/include/$header" "${{ github.workspace }}/x64-linux/$header"
          done
          cp "${{ env.VCPKG_ROOT }}/installed/x64-linux/lib/libz3.a" "${{ github.workspace }}/x64-linux/libz3.a"
          tar -jcvf "${{ github.workspace }}/x64-linux.tar.gz" "${{ github.workspace }}/x64-linux"
      - name: upload artifact for x64-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/x64-linux.tar.gz
          asset_name: x64-linux.tar.gz
          asset_content_type: application/gzip
        
      - name: vcpkg build z3 with triplet x64-osx
        working-directory: ${{ env.VCPKG_ROOT }}
        run: ./vcpkg install --clean-buildtrees-after-build z3:x64-osx
      - name: prepare artifact for x64-osx
        run: |
          ls "${{ env.VCPKG_ROOT }}/installed/x64-osx/lib"
          ls "${{ env.VCPKG_ROOT }}/installed/x64-osx/include"
          mkdir "${{ github.workspace }}/x64-osx"
          headers=("z3.h" "z3++.h" "z3_algebraic.h" "z3_api.h" "z3_ast_containers.h" "z3_fixedpoint.h" "z3_fpa.h" "z3_macros.h" "z3_optimization.h" "z3_polynomial.h" "z3_rcf.h" "z3_spacer.h" "z3_v1.h" "z3_version.h")
          for header in $headers
          do
            cp "${{ env.VCPKG_ROOT }}/installed/x64-osx/include/$header" "${{ github.workspace }}/x64-osx/$header"
          done
          cp "${{ env.VCPKG_ROOT }}/installed/x64-osx/lib/libz3.a" "${{ github.workspace }}/x64-osx/libz3.a"
          tar -jcvf "${{ github.workspace }}/x64-osx.tar.gz" "${{ github.workspace }}/x64-osx"
      - name: upload artifact for x64-osx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/x64-osx.tar.gz
          asset_name: x64-osx.tar.gz
          asset_content_type: application/gzip
        
      - name: vcpkg build z3 with triplet x64-windows-static-md
        working-directory: ${{ env.VCPKG_ROOT }}
        run: ./vcpkg install --clean-buildtrees-after-build z3:x64-windows-static-md
      - name: prepare artifact for x64-windows-static-md
        run: |
          ls "${{ env.VCPKG_ROOT }}/installed/x64-windows-static-md/lib"
          ls "${{ env.VCPKG_ROOT }}/installed/x64-windows-static-md/include"
          mkdir "${{ github.workspace }}/x64-windows-static-md"
          headers=("z3.h" "z3++.h" "z3_algebraic.h" "z3_api.h" "z3_ast_containers.h" "z3_fixedpoint.h" "z3_fpa.h" "z3_macros.h" "z3_optimization.h" "z3_polynomial.h" "z3_rcf.h" "z3_spacer.h" "z3_v1.h" "z3_version.h")
          for header in $headers
          do
            cp "${{ env.VCPKG_ROOT }}/installed/x64-windows-static-md/include/$header" "${{ github.workspace }}/x64-windows-static-md/$header"
          done
          cp "${{ env.VCPKG_ROOT }}/installed/x64-windows-static-md/lib/libz3.lib" "${{ github.workspace }}/x64-windows-static-md/libz3.lib"
          tar -jcvf "${{ github.workspace }}/x64-windows-static-md.tar.gz" "${{ github.workspace }}/x64-windows-static-md"
      - name: upload artifact for x64-windows-static-md
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/x64-windows-static-md.tar.gz
          asset_name: x64-windows-static-md.tar.gz
          asset_content_type: application/gzip
        